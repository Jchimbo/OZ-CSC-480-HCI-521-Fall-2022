<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">

    <!-- Enable features -->
    <featureManager>
        <feature>jakartaee-9.1</feature>
        <feature>microProfile-5.0</feature>
        <feature>socialLogin-1.0</feature>
    </featureManager>
    <library id="jdbcLib">
        <fileset dir="jdbc" includes="*.jar"/>
    </library>
    <dataSource jndiName="jdbc/myDB">
        <jdbcDriver libraryRef="jdbcLib"/>
        <properties
                serverName="localhost"
                portNumber="3306"
                databaseName="DISCORD_1006664292751396975"
                user="${REST}"
                password="${RESTP}"/>
    </dataSource>
    <!--                user="OZ_rest"-->


    <oauth2Login id="discordLogin" clientId="${discord.client.id}" clientSecret="${discord.client.secret}"
                 scope="identify guilds guilds.members.read"   responseType="code"
                 tokenEndpointAuthMethod="client_secret_post"
                 authorizationEndpoint="https://discord.com/oauth2/authorize"
                 tokenEndpoint="https://discord.com/api/oauth2/token"
                 userApi="https://discord.com/api/users/@me"
                 userNameAttribute="username"
                 userApiNeedsSpecialHeader="true"
                 website="https://discord.com/developers/docs/topics/oauth2">
    </oauth2Login>
    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->

    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
        encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
        Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/> 
    -->

    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password,
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element.
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm">
       
        <user name="User" password="pass" />
       
    </basicRegistry>

    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  httpPort="9080"
                  httpsPort="9443"
                  host="*"
    />

    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

    <!-- Configures the application on a specified context root -->
    <webApplication contextRoot="/" location="demo.war" >
        <application-bnd>
            <security-role name="users">
                <special-subject type="ALL_AUTHENTICATED_USERS"/>
            </security-role>
        </application-bnd>
    </webApplication>
    <keyStore id="defaultKeyStore" password="mZFiSIbc3c2rann9QxZFyig"/>


    <!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
    <ssl id="defaultSSLConfig" keyStoreRef="defaultKeyStore" trustDefaultCerts="true" />
</server>
